//TC: O(N) coz of linear traversal
//SC: O(N) coz we used a map
int Solution::romanToInt(string A) {
    unordered_map<char,int>mp;
    mp['I'] = 1;
    mp['V'] = 5;
    mp['X'] = 10;
    mp['L'] = 50;
    mp['C'] = 100;
    mp['D'] = 500;
    mp['M'] = 1000;
    int n = A.length();
    int sum = mp[A[n-1]];//store the integer version of last roman numeral of given string A
    for(int i = n-2;i>=0;i--)
    {
        if(mp[A[i]]<mp[A[i+1]]){ //if ith is smaller numeral than i+1th
            sum-=mp[A[i]];
        }
        else //else if ith is >= i+1th , simply add ith value to the sum
        {
            sum+=mp[A[i]];
        }
    }
    return sum;
}
