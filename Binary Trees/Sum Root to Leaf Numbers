/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 -----------------------
 //Recursive Approach:
 ----------------------
class Solution {
public:
    int sum = 0;
    void solve(TreeNode* root, int temp)
    {
        //base case:
        if(root==NULL)
        {
            return;
        }
        //induction:
        temp=temp*10 + root->val;//compute the digit
        
        if(!root->left && !root->right)//if leaf node has been reached, then add number to sum
        {
            sum+=temp;
            return;
        }
        //hypothesis:
        solve(root->left,temp);
        solve(root->right,temp);
        return;
            
    }
    int sumNumbers(TreeNode* root) {
        solve(root,0);
        return sum;
    }
};
