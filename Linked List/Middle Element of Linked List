----------------------------------
O(N) Time and O(1) Space 
--------------------------------
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        if(head==NULL)
        {
            return NULL;//middle of empty ll is NULL itself
        }
        ListNode* slow = head;
        ListNode* fast = head;
        //when fast reaches end, slow reaches midway ie. middle element
        while(fast && fast->next)
        {
            slow = slow->next;
            fast = fast->next->next;
        }
        //when we come out of the loop, slow has reached till midway ie till middle element of ll
        return slow;
    }
};
