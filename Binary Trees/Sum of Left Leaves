/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 ------------------------------------------------
 Recursive Solution: O(N) Time 
 ------------------------------------------------
class Solution {
public:
    int sum = 0;
    void solve(TreeNode* root,bool flag)
    {
        if(root==NULL)
        {
            return;
        }
        if(root->left==NULL && root->right==NULL && flag == true)//we have reached a left leaf node
        {
            sum+=root->val;
            return;
        }
        solve(root->left,true);
        solve(root->right, false);
    }
    int sumOfLeftLeaves(TreeNode* root)
    {
        //base case:
        if(root==NULL)//empty tree
        {
            return 0;
        }
        if(root->left==NULL && root->right==NULL)//if root has no children, then return 0
        {
            return 0;
        }
        solve(root,false);
        return sum;
    }
};
