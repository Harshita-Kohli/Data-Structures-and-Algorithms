int Solution::solve(vector<vector<int> > &A) {
    // bottom up DP approach:O(n^2) time and O(1) space
    int n = A.size();
    for(int i = 0;i<n;i++){
        for(int j = 0;j<=i;j++){
            if(i==0 && j==0)
            {
                continue;
            }
            if(j==0){
                A[i][j] +=A[i-1][j];
            }
        }
    }
    for(int i = 1;i<n;i++){
        for(int j = 1;j<=i;j++){
            A[i][j] += max(A[i-1][j],A[i-1][j-1]);
        }
    }
    int maxim = INT_MIN;
    for(int j = 0;j<n;j++){
        maxim = max(maxim,A[n-1][j]);
    }
    return maxim;
}
