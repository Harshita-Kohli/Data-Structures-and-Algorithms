/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int height(TreeNode* root,int &maxim)
    {
        if(root==NULL)
        {
            return 0;
        }
        int lh = height(root->left,maxim);
        int rh = height(root->right,maxim);
        maxim = max(maxim,lh+rh);
        return 1+max(lh,rh);  
    }
    int diameterOfBinaryTree(TreeNode* root) {
        if(root==NULL)
        {
            return 0;//the diameter of empty tree is 0
        }
        int maxim = 0;
        height(root,maxim);
        return maxim;
    }
};
