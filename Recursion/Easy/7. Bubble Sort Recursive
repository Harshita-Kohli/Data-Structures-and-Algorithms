//{ Driver Code Starts
//Initial Template for C++

// C program for implementation of Bubble sort
#include <stdio.h>

// swapping the elements
void swap(int *xp, int *yp)
{
    int temp = *xp;
    *xp = *yp;
    *yp = temp;
}


// } Driver Code Ends
//User function Template for C++
class Solution
{
    public:

    //Function to sort the array using bubble sort algorithm.
    void bubbleSort(int arr[], int n)
    {
        // Your code here 
        if(n==1)
        {
            return;//sorted coz we have done n-1 passes
        }
        //recursive case:
        int swapped = 0;//let flag be 0 at the beginning of the pass
        
        // one pass of bubble sort, after this the largest element has moved to the end
        for(int j = 0;j<n-1;j++){
            if(arr[j]>arr[j+1]){
                int temp = arr[j];
                arr[j] = arr[j+1];
                arr[j] = temp;
                swapped = 1;
            }
        }
        if(swapped==0)//no swapping took place
        {
            return;//as the array has been sorted already
        }
        
        //after this one pass the ith largest number is at its correct position, 
        //Recur for all elements except last of current subarray coz last has already been fixed
        bubbleSort(arr, n-1);
    }
};


//{ Driver Code Starts.

/* Function to print an array */
void printArray(int arr[], int size)
{
    int i;
    for (i=0; i < size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}
