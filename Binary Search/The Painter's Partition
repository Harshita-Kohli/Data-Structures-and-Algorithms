//{ Driver Code Starts
// driver code

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function template for C++

class Solution
{
  public:
  bool isPossible(long long mid, int arr[], int n, int k){
      int paintersCount = 1;
      int timeSum = 0;
      for(int i = 0;i<n;i++){
          timeSum+=arr[i];
          if(timeSum>mid){
              paintersCount++;
              timeSum = arr[i];
          }
          if(paintersCount>k || arr[i]>mid)//if count of painters exceeds k, it means this scheme doesnot work
          {
              return false;
          }
      }
      return true;
      
  }
    long long minTime(int arr[], int n, int k)
    {
        // code here
        // return minimum time
        long long s = 0;//minimum is for not painting anything
        long long e = 0;
        long long sum = 0;
        for(int i = 0;i<n;i++){
            sum+=arr[i];
        }
        e = sum;
        long long ans = -1;
        while(s<=e){
            long long mid = s+(e-s)/2;
            if(isPossible(mid,arr,n,k)){
                ans = mid;
                e = mid-1;//left part of mid check karo
            }
            else{ //if not possible for this scheme
                s = mid+1;//mid ke right me check karo
            }
        }
        return ans;
    }
};

//{ Driver Code Starts.

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int k,n;
		cin>>k>>n;
		
		int arr[n];
		for(int i=0;i<n;i++)
		    cin>>arr[i];
		Solution obj;
		cout << obj.minTime(arr, n, k) << endl;
	}
	return 0;
}
// } Driver Code Ends
