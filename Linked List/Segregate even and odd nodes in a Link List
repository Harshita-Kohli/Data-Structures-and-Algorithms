//{ Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};
void printList(Node* node) 
{ 
    while (node != NULL) { 
        cout << node->data <<" "; 
        node = node->next; 
    }  
    cout<<"\n";
} 


// } Driver Code Ends
//User function template for C++

/*
struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};
*/
class Solution{
public:
    Node* divide(int N, Node *head){
        // code here
        if(head==NULL)//empty linked list
        {
            return NULL;
        }
        if(head->next==NULL)
        {
            return head;//single node in linked list
        }
        Node* evenHead = new Node(-1);
        Node* oddHead = new Node(-1);
        Node* temp = head;
        Node* e = evenHead; //2 pointer to iterate over even and odd nodes
        Node* o = oddHead;
        while(temp)
        {
            if(temp->data % 2==0)//even node
            {
                e->next = temp;
                e = e->next;
            }
            else if(temp->data % 2!=0)//odd node
            {
                o->next = temp;
                o = o->next;
            }
            temp = temp->next;
        }
        //now merge the two lists:
        o->next = NULL;
        if(evenHead->next==NULL) //if linked list had only odd nodes:
        {
            return oddHead->next;
        }
        else if(oddHead->next==NULL) //if linked list had only even nodes
        {
            e->next = NULL;
            return evenHead->next;
        }
        head = evenHead->next;
        e->next = oddHead->next;
        return head;
    }
};

//{ Driver Code Starts.

int main() {
    //code
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        int data;
        cin>>data;
        struct Node *head = new Node(data);
        struct Node *tail = head;
        for (int i = 0; i < N-1; ++i)
        {
            cin>>data;
            tail->next = new Node(data);
            tail = tail->next;
        }
        
        Solution ob;
        Node *ans = ob.divide(N, head);
        printList(ans); 
    }
    return 0;
}

// } Driver Code Ends
