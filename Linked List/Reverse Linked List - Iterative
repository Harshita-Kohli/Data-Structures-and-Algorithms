-------------------------------------
O(N) Time and O(1) Space Complexity
------------------------------------
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* prev = NULL;
        ListNode* curr = head;
        ListNode* n;
        while(curr!=NULL)
        {
            n = curr->next;
            curr->next = prev;
            ///move curr and prev forward:
            prev = curr;
            curr = n;
        }
        return prev;//prev will be pointing to the new head of the reversed linked list
    }
};
