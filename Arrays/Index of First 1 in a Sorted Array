//TC: O(log N) 
//SC: O(1) 
//NOTE: Given is a Sorted array whoch is NOT INFINITE!!!
//--------------------------------------------------
class Solution{
    public:
    int firstIndex(int a[], int n) 
    {
        // Your code goes here
        int s = 0;
        int e = n-1;
        int ans = -1;
        while(s<=e){
            int mid = s+(e-s)/2;
            if(a[mid]==1)
            {
                ans = mid;
                e = mid-1;//check on the left of mid coz we want the first occurence
            }
            else if(a[mid]==0){
                s = mid+1;//i wanna check on the right of mid to reach 1
            }
        }
        return ans;
    }
};

//{ Driver Code Starts.
int main() {

    int t;
    cin >> t;

    while (t--) {
        int n;
        cin >> n;
        int a[n];

        for (int i = 0; i < n; i++) cin >> a[i];
        Solution ob;
        cout << ob.firstIndex(a, n) << endl;
    }
}
// } Driver Code Ends
