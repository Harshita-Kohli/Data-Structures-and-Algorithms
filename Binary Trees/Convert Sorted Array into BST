/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* solve(int l, int u,vector<int>& nums)
    {
        if(l>u)//this means we have reached NULL node
        {
            return NULL;
        }
        int mid = l+(u-l)/2;
        TreeNode* root = new TreeNode(nums[mid]);
        root->left = solve(l,mid-1,nums);
        root->right = solve(mid+1,u,nums);
        return root;
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        int n = nums.size();
        int l = 0;
        int u = n-1;
        // int mid = l+(u-l)/2;
        return solve(l,u,nums);
    }
};
