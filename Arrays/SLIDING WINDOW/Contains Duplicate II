//Sliding Window :
//TC: O(N) coz of linear traversal
//SC: O(N) coz of map
class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        int n = nums.size();
        int i = 0;
        int j = 0;
        unordered_map<int,int>mp;
        while(j<n){
            mp[nums[j]]++;//increase the freq of the current element
            if(mp[nums[j]]>1){ //if freq>1, it is a duplicate, so return true
                return true;
            }
            //if target size not achieved as yet
            if(j-i<k){
                j++;
            }
            //agar target size achieved par abhi tak koi duplicate element nahi hai, to move window forward maintaining its size
            else if(j-i==k){ 
                //remove answer contributed by i
                if(mp.find(nums[i])!=mp.end())
                {
                    mp.erase(nums[i]);
                }
                i++;//move window forward while maintaining its size
                j++;
            }
            
        }
        return false;//if no such elements found, return false;
    }
};
