Given two binary strings a and b, return their sum as a binary string.

Example 1:
Input: a = "11", b = "1"
Output: "100"

Example 2:
Input: a = "1010", b = "1011"
Output: "10101"
 
Constraints:
1 <= a.length, b.length <= 104
a and b consist only of '0' or '1' characters.
Each string does not contain leading zeros except for the zero itself.
<---------------------------------------------------------->
//TC: O(N) we just doing linear traversal over the two strings
//SC: O(1)
class Solution {
public:
    string addBinary(string a, string b) {
        int n = a.length();
        int m = b.length();
        int i = n-1;
        int j = m-1;
        int carry = 0;
        int sum = 0;
        string ans = "";//initially empty string
        while(i>=0 || j>=0)// we use || so that we keep iterating over the other string even if one string gets finished. This helps us in the case of 11+1 where n = 2 and m = 1 and j will reach 0 before i. 
        {
            sum = carry;//every time we make sum =carry
            if(i>=0) sum += a[i]-'0';//adding the bit of string a
            if(j>=0) sum += b[j]-'0';//adding the bit of sting b
            
            //now according to the sum, we construct the ans string:
            if(sum%2!=0)//for odd sum, we append '1' in the ans string
            //     // EG: 1+0 = 1 which is odd so ans should be 1 and carry should be set to 0
            {
                ans+='1';
            }
            else if(sum%2==0)//for even sum, we append '0' in the ans string and add a carry of 1. EG: 1+1 = 2 so the answer should be 0 and 1 should be in carry
            {
                ans+='0';
            }
            carry = sum>1 ? 1:0;//if sum is>1, then the carry bit will be 1 else it will be 0
            // ans+=to_string(sum%2);
            i--;
            j--;
        }
        //if a carry is left and bith the strings are finished:
        if(carry)
        {
            ans+=to_string(carry);//we append the carry bit in the answer string
        }
      reverse(ans.begin(),ans.end());//we need to reverse the string before returning
        return ans;
    }
};
